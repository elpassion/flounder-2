{
  "extends": ["plugin:import/typescript", "../../.eslintrc.json"],
  "ignorePatterns": ["!**/*"],
  "plugins": ["formatjs", "import"],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "project": "apps/frontend/tsconfig.json"
      }
    }
  },
  "rules": {
    "formatjs/enforce-default-message": ["error", "literal"],
    "import/no-unresolved": "error",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@flounder/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "messages",
            "group": "unknown",
            "position": "after",
            "patternOptions": { "matchBase": true }
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {}
    },
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {}
    },
    {
      "files": ["*.config.js"],
      "rules": {
        "import/order": "off"
      }
    }
  ]
}
