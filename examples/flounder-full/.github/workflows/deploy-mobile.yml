name: Deploy Mobile

on:
  workflow_call:

jobs:
  deploy-to-google-test:
    runs-on: [self-hosted, macOS]
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: elpassion/setup-ruby@v1.0.2
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Cache node_modules
        uses: j3hempsey-actions/local-cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install global node modules
        run: pnpm install --frozen-lockfile

      - name: Install node nodules inside react native application
        run: cd apps/mobile && pnpm install --frozen-lockfile && cd ../..

      - name: Install Fastlane
        run: pnpm run fastlane:installAndroid

      - name: Create release keystore
        run: |
          cd apps/mobile/android/fastlane
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > ${{ secrets.ANDROID_KEYSTORE_FILE }}.asc
          gpg -d --passphrase "${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSPHRASE }}" --batch ${{ secrets.ANDROID_KEYSTORE_FILE }}.asc > ${{ secrets.ANDROID_KEYSTORE_FILE }}
          cd ../../../..

      - name: Create Google Api Service
        run: |
          cd apps/mobile/android
          echo "${{ secrets.ANDROID_API_KEY }}" > ${{ secrets.ANDROID_API_KEY_FILE }}.asc
          gpg -d --passphrase "${{ secrets.ANDROID_API_KEY_PASSPHRASE }}" --batch ${{ secrets.ANDROID_API_KEY_FILE }}.asc > ${{ secrets.ANDROID_API_KEY_FILE }}
          cd ../../..

      - name: Upload to Google Internal Tests with Fastlane
        run: pnpm run fastlane:buildAndroid
        env:
          ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_API_KEY_FILE: ${{ secrets.ANDROID_API_KEY_FILE }}
          COGNITO_LOGIN_REDIRECT: ${{ secrets.COGNITO_LOGIN_REDIRECT }}
          COGNITO_LOGOUT_REDIRECT: ${{ secrets.COGNITO_LOGOUT_REDIRECT }}
          API_URL: ${{ secrets.API_URL }}
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
          COGNITO_CLIENT_SECRET: ${{ secrets.COGNITO_CLIENT_SECRET }}
          COGNITO_ISSUER: ${{ secrets.COGNITO_ISSUER }}
          COGNITO_URL: ${{ secrets.COGNITO_URL }}

  deploy-to-testflight:
    runs-on: [self-hosted, macOS]
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: elpassion/setup-ruby@v1.0.2
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Cache node_modules
        uses: j3hempsey-actions/local-cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install global node modules
        run: pnpm install --frozen-lockfile

      - name: Install node nodules inside react native application
        run: cd apps/mobile && pnpm install --frozen-lockfile && cd ../..

      - name: Install Fastlane
        run: pnpm run fastlane:installIos

      - name: Install pods
        run: pnpm ci:pods

      - name: Create Apple Api Service
        run: |
          cd apps/mobile/ios/fastlane
          echo "${{ secrets.APPLE_API_KEY }}" > ${{ secrets.APPLE_API_KEY_FILE }}.asc
          gpg -d --passphrase "${{ secrets.APPLE_API_KEY_PASSPHRASE }}" --batch ${{ secrets.APPLE_API_KEY_FILE }}.asc > ${{ secrets.APPLE_API_KEY_FILE }}
          cd ../../../..

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2.0'

      - name: Upload to Testflight with Fastlane
        run: pnpm run fastlane:buildIos
        env:
          APPLE_APP_IDENTIFIER: ${{ secrets.APPLE_APP_IDENTIFIER }}
          APPLE_API_KEY_FILE: ${{ secrets.APPLE_API_KEY_FILE }}
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_ITC_TEAM_ID: ${{ secrets.APPLE_ITC_TEAM_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.APPLE_PROVISIONING_PROFILE_SPECIFIER }}
          APPLE_TEMP_KEYCHAIN_NAME: ${{ secrets.APPLE_TEMP_KEYCHAIN_NAME }}
          APPLE_TEMP_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_TEMP_KEYCHAIN_PASSWORD }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          COGNITO_LOGIN_REDIRECT: ${{ secrets.COGNITO_LOGIN_REDIRECT }}
          COGNITO_LOGOUT_REDIRECT: ${{ secrets.COGNITO_LOGOUT_REDIRECT }}
          API_URL: ${{ secrets.API_URL }}
          COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
          COGNITO_CLIENT_SECRET: ${{ secrets.COGNITO_CLIENT_SECRET }}
          COGNITO_ISSUER: ${{ secrets.COGNITO_ISSUER }}
          COGNITO_URL: ${{ secrets.COGNITO_URL }}

